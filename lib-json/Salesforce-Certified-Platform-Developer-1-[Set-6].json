{
  "title": "Salesforce-Certified-Platform-Developer-1-[Set-6]",
  "category": "Salesforce Dev 1",
  "questions": [
    {
      "describe": "What is the result of the debug statements in testMethod3 when you create test data using testsetup in below code?\n@isTest\nprivate class CreateAndExecuteTest{\n@testSetup\nstatic void setup() {\n// Create 2 test accounts\nList<Account> testAccts = new List<Account>();\nfor(Integer i=0;i<2;i++) {\ntestAccts.add(new Account(Name = 'MyTestAccount'+i, Phone='333-878'+i));\n}\ninsert testAccts;\n}\n@isTest static void testMethod1() {\nAccount acc = [SELECT Id,Phone FROM Account WHERE Name='MyTestAccount0' LIMIT 1]; acc.Phone = '888-1515';\nupdate acc;\nAccount acc2 = [SELECT Id,Phone FROM Account WHERE Name='MyTestAccount1' LIMIT 1]; acc2.Phone = '999-1515';\nupdate acc2;\n}\n@isTest static void testMethod2() {\nAccount acc = [SELECT Id,Phone FROM Account WHERE Name='MyTestAccount1' LIMIT 1]; acc.Phone = '999-2525';\nupdate acc;\n}\n@isTest static void testMethod3() {\nAccount acc0 = [SELECT Id, Phone FROM Account WHERE Name='MyTestAccount0' LIMIT 1]; Account acc1 = [SELECT Id, Phone FROM Account WHERE Name='MyTestAccount1' LIMIT 1];\nSystem.debug('Account0.Phone='+ acc0.Phone +', Account1.Phone='+acc1.Phone);\n}\n}",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Account0.Phone=888-1515, Accountl.Phone=999-2525"
        },
        {
          "isRight": false,
          "describe": "Account0.Phone=333-8781, Accountl.Phone=333-8780"
        },
        {
          "isRight": true,
          "describe": "Account0.Phone=333-8780, Accountl.Phone=333-8781"
        },
        {
          "isRight": false,
          "describe": "Account0.Phone=888-1515, Accountl.Phone=999-1515"
        }
      ]
    },
    {
      "describe": "While writing a test class that covers an OpportunityLineitem trigger, a Developer is unable to create a standard PriceBook since one already exists in the org.\nHow should the Developer overcome this problem?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Use @isTest (SeeAllData=true) and delete the existing standard PriceBook."
        },
        {
          "isRight": true,
          "describe": "Use Test. getStandardPricebookId() to get the standard PriceBook ID."
        },
        {
          "isRight": false,
          "describe": "Use Test.loadData () and a Static Resource to load a standard PriceBook."
        },
        {
          "isRight": false,
          "describe": "Use @Testvisible to allow the test method to see the standard PriceBook."
        }
      ]
    },
    {
      "describe": "Using the Schema Builder, a developer tries to change the API name of a field that is referenced in an Apex test class.\nWhat is the end result?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "The API name of the field is changed, and a warning is issued to update the class."
        },
        {
          "isRight": true,
          "describe": "The API name is not changed and there are no other impacts."
        },
        {
          "isRight": false,
          "describe": "The API name of the field and the reference in the test class is changed."
        },
        {
          "isRight": false,
          "describe": "The API name of the field and the reference in the test class is updated."
        }
      ]
    },
    {
      "describe": "Which approach should be used to provide test data for a test class?",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "Use a test data factory class to create test data."
        },
        {
          "isRight": false,
          "describe": "Query for existing records in the database."
        },
        {
          "isRight": false,
          "describe": "Execute anonymous code blocks that create data."
        },
        {
          "isRight": false,
          "describe": "Access data in @Testvisibie class variables."
        }
      ]
    },
    {
      "describe": "A developer created a Visualforce page and a custom controller with methods to handle different buttons and events that can occur on the page.\nWhat should the developer do to deploy to production?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Create a test page that provides coverage of the custom controller."
        },
        {
          "isRight": false,
          "describe": "Create a test class that provides coverage of the Visualforce page."
        },
        {
          "isRight": false,
          "describe": "Create a test page that provides coverage of the Visualforce page."
        },
        {
          "isRight": true,
          "describe": "Create a test class that provides coverage of the custom controller."
        }
      ]
    },
    {
      "describe": "What is a requirement for a class to be used as a custom Visualforce controller?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Any top-level Apex class that extends a PageReference"
        },
        {
          "isRight": true,
          "describe": "Any top-level Apex class that has a default, no-argument constructor"
        },
        {
          "isRight": false,
          "describe": "Any top-level Apex class that has a constructor that returns a PageReference"
        },
        {
          "isRight": false,
          "describe": "Any top-level Apex class that implements the controller interface"
        }
      ]
    },
    {
      "describe": "Which statement results in an Apex compiler error?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Date d1= Date. Today(), d2 = Date . Valueof ( ' 2018-01-01' );"
        },
        {
          "isRight": true,
          "describe": "List<string> s = List<string> {' a ', 'b ', 'c'};"
        },
        {
          "isRight": false,
          "describe": "Integer a=5, b=6, c, d = 7;"
        },
        {
          "isRight": false,
          "describe": "Map<Id, Lead> lmap = new Map<id, Lead> ( [Select ID from Lead Limit 8]);"
        }
      ]
    },
    {
      "describe": "83. Which two platform features allow for the use of unsupported languages?\nChoose 2 answers",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "app.json"
        },
        {
          "isRight": false,
          "describe": "Heroku ACM"
        },
        {
          "isRight": true,
          "describe": "Docker"
        },
        {
          "isRight": true,
          "describe": "Buildpacks"
        }
      ]
    },
    {
      "describe": "What are two benefits of the Lightning Component framework?\nChoose 2 answers",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "It promotes faster development using out-of-the-box components that are suitable for desktop and mobile devices."
        },
        {
          "isRight": false,
          "describe": "It simplifies complexity when building pages, but not applications."
        },
        {
          "isRight": true,
          "describe": "It provides an event-driven architecture for better decoupling between components."
        },
        {
          "isRight": false,
          "describe": "It allows faster PDF generation with Lightning components."
        }
      ]
    },
    {
      "describe": "What is a capability of the <ltng:require> tag that is used for loading external Javascript libraries in Lightning Components?\nChoose 3 answers",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "Loading externally hosted scripts."
        },
        {
          "isRight": true,
          "describe": "One-time loading for duplicate scripts."
        },
        {
          "isRight": true,
          "describe": "Specifying loading order."
        },
        {
          "isRight": false,
          "describe": "Loading files from Documents."
        },
        {
          "isRight": false,
          "describe": "Loading scripts in parallel."
        }
      ]
    },
    {
      "describe": "When an Account's custom picklist field called Customer Sentiment is changed to a value of \"Confused,\" a new related Case should automatically be created.\nWhich two methods should a developer use to create this case? Choose 2 answers",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "Apex Trigger"
        },
        {
          "isRight": false,
          "describe": "Workflow Rule"
        },
        {
          "isRight": true,
          "describe": "Process Builder"
        },
        {
          "isRight": false,
          "describe": "Custom Button"
        }
      ]
    },
    {
      "describe": "Which approach should a developer use to add pagination to a Visualforce page?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "the extensions attribute for a page"
        },
        {
          "isRight": false,
          "describe": "a StandardController"
        },
        {
          "isRight": false,
          "describe": "the action attribute for a page"
        },
        {
          "isRight": true,
          "describe": "a StandardSetController"
        }
      ]
    },
    {
      "describe": "Which set of roll-up types are available when creating a roll-up summary field?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "AVERAGE, COUNT, SUM, MIN, MAX"
        },
        {
          "isRight": true,
          "describe": "COUNT, SUM, MIN, MAX"
        },
        {
          "isRight": false,
          "describe": "SUM, MIN, MAX"
        },
        {
          "isRight": false,
          "describe": "AVERAGE, SUM, MIN, MAX"
        }
      ]
    },
    {
      "describe": "Which tool allows a developer to send requests to the Salesforce REST APIs and view the responses?",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "Workbench REST Explorer"
        },
        {
          "isRight": false,
          "describe": "Force.com IDE REST Explorer tab"
        },
        {
          "isRight": false,
          "describe": "Developer Console REST tab"
        },
        {
          "isRight": false,
          "describe": "REST resource path URL"
        }
      ]
    },
    {
      "describe": "In a single record, a user selects multiple values from a multi-select picklist.\nHow are the selected values represented in Apex?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "As a string with each value separated by a comma"
        },
        {
          "isRight": false,
          "describe": "As a set<string> with each value as an element in the set"
        },
        {
          "isRight": false,
          "describe": "As a List<String> with each value as an element in the list"
        },
        {
          "isRight": true,
          "describe": "As a string with each value separated by a semicolon"
        }
      ]
    }
  ]
}