{
  "title": "Salesforce-Certified-Platform-Developer-1-[Set-4]",
  "category": "Salesforce Dev 1",
  "questions": [
    {
      "describe": "A developer created a Lightning Component to display a short text summary for an object and wants to use it with multiple Apex classes.\nHow should the developer design the Apex classes?",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "Extend each class from the same base class that has a method getTextSummary() that returns the summary."
        },
        {
          "isRight": false,
          "describe": "Have each class define method getTextSummary() that returns the summary."
        },
        {
          "isRight": false,
          "describe": "Have each class define method getObject() that returns the sObject that is controlled by the Apex class."
        },
        {
          "isRight": false,
          "describe": "Have each class implement an interface that defines method getTextSummary() that returns the summary."
        }
      ]
    },
    {
      "describe": "What are two considerations for converting a Lookup to a Master-Detail relationship?\nChoose 2 answers",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "The organization-wide default changes to Controlled by Parent."
        },
        {
          "isRight": false,
          "describe": "The organization-wide default changes to Public Read/Write."
        },
        {
          "isRight": false,
          "describe": "All the null values in the Lookup field will be replaced by default values."
        },
        {
          "isRight": true,
          "describe": "If there are existing records with a null value in the Lookup field, an error will occur."
        }
      ]
    },
    {
      "describe": "Which SOQL query successfully returns the Accounts grouped by name?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "SELECT Id, Type, Max(CreatedDate) FROM Account GROUP BY Name"
        },
        {
          "isRight": true,
          "describe": "SELECT Name, Max(CreatedDate) FROM Account GROUP BY Name"
        },
        {
          "isRight": false,
          "describe": "SELECT Type, Name, Max(CreatedDate) FROM Account GROUP BY Name LIMIT 5"
        },
        {
          "isRight": false,
          "describe": "SELECT Type, Max(CreatedDate) FROM Account GROUP BY Name"
        }
      ]
    },
    {
      "describe": "How are debug levels adjusted in the Developer Console?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Under the Edit menu, click Change DebugLevels."
        },
        {
          "isRight": false,
          "describe": "Under the Logs tab, click Change in the DebugLevels panel."
        },
        {
          "isRight": true,
          "describe": "Under the Debug menu > Change Log Levels..., click Add/Change in the DebugLevel Action column."
        },
        {
          "isRight": false,
          "describe": "Under the Settings menu > Trace Settings..., click Change DebugLevel."
        }
      ]
    },
    {
      "describe": "What is a key difference between a Master-Detail Relationship and a Lookup Relationship?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "A Lookup Relationship is a required field on an object."
        },
        {
          "isRight": true,
          "describe": "A Master-Detail Relationship detail record inherits the sharing and security of its master record."
        },
        {
          "isRight": false,
          "describe": "When a record of a master object in a Lookup Relationship is deleted, the detail records are also deleted."
        },
        {
          "isRight": false,
          "describe": "When a record of a master object in a Master-Detail Relationship is deleted, the detail records are kept and not deleted."
        }
      ]
    },
    {
      "describe": "Which three options allow a developer to use custom styling in a Visualforce page?\nChoose 3 answers",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "<apex: stylesheet> tag"
        },
        {
          "isRight": false,
          "describe": "<apex: style> tag"
        },
        {
          "isRight": false,
          "describe": "<apex: stylesheets> tag"
        },
        {
          "isRight": true,
          "describe": "inline CSS"
        },
        {
          "isRight": true,
          "describe": "a static resource"
        }
      ]
    },
    {
      "describe": "What are three characteristics of static methods?\nChoose 3 answers",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "Initialized only when a class is loaded"
        },
        {
          "isRight": false,
          "describe": "A static variable is available outside of the scope of an Apex transaction"
        },
        {
          "isRight": true,
          "describe": "Allowed only in outer classes"
        },
        {
          "isRight": false,
          "describe": "Allowed only in inner classes"
        },
        {
          "isRight": true,
          "describe": "Are NOT transmitted as part of the view state for a Visualforce page"
        }
      ]
    },
    {
      "describe": "Which tool can deploy destructive changes to Apex classes in production?",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "Workbench"
        },
        {
          "isRight": false,
          "describe": "Change Sets"
        },
        {
          "isRight": false,
          "describe": "Developer Console"
        },
        {
          "isRight": false,
          "describe": "Salesforce Setup"
        }
      ]
    },
    {
      "describe": "What are two ways a developer should deploy code from a developer org to an unrelated production org?\nChoose 2 answers",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Login to the production org and set the developer org as an inbound connection in the Deployment Settings screen."
        },
        {
          "isRight": false,
          "describe": "Save the code to a folder on the developer's computer, create an incoming Change Set in the production org, and upload the files directly."
        },
        {
          "isRight": true,
          "describe": "Package the code as an unmanaged package and install it in the production org."
        },
        {
          "isRight": false,
          "describe": "Setup a Salesforce to Salesforce connection and deploy a Change Set."
        },
        {
          "isRight": true,
          "describe": "Use an IDE to upload the new code directly into the production org using the metadata API."
        }
      ]
    },
    {
      "describe": "A developer has a unit test that is failing. To identify the issue, the developer copies the code inside the test method and executes it via the Execute Anonymous Apex tool. The code then executes without failing.\nWhy did the unit test fail, but not the Execute Anonymous?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "The test method uses a try/catch block."
        },
        {
          "isRight": true,
          "describe": "The test method relies on existing data in the database."
        },
        {
          "isRight": false,
          "describe": "The test method calls an @future method."
        },
        {
          "isRight": false,
          "describe": "The test method has a syntax error in the code."
        }
      ]
    },
    {
      "describe": ". A developer needs to display all of the available fields for an object.\nIn which two ways can the developer retrieve the available fields if the variable myObject represents the name of the object?\nChoose 2 answers",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "Use getGlobalDescribe().get(myObject).getDescribe().fields.getMap() to return a map of fields."
        },
        {
          "isRight": true,
          "describe": "Use SObjectType.myObject.fields.getMap() to return a map of fields."
        },
        {
          "isRight": false,
          "describe": "Use Schema.describeSObjects(new String[]{myObject})[0].fields.getMap() to return a map of fields."
        },
        {
          "isRight": false,
          "describe": "Use myObject.sObjectType.getDescribe().fieldSet() to return a set of fields."
        }
      ]
    },
    {
      "describe": "What is the return data type when ApexPages.currentPage().getParameters() is used to retrieve URL parameters from a Visualforce controller?",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "Map<String, String>"
        },
        {
          "isRight": false,
          "describe": "String[]"
        },
        {
          "isRight": false,
          "describe": "List<String>"
        },
        {
          "isRight": false,
          "describe": "Enum"
        }
      ]
    },
    {
      "describe": "Which three declarative fields are correctly mapped to variable types in Apex?\nChoose 3 answers",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "TextArea maps to List of type String"
        },
        {
          "isRight": false,
          "describe": "Number maps to Integer"
        },
        {
          "isRight": true,
          "describe": "Number maps to Decimal"
        },
        {
          "isRight": true,
          "describe": "Date/Time maps to Datetime"
        },
        {
          "isRight": true,
          "describe": "Checkbox maps to Boolean"
        }
      ]
    },
    {
      "describe": "A developer is asked to create a PDF quote document formatted using the company's branding guidelines, and automatically save it to the Opportunity record.\nWhich two ways should a developer create this functionality?\nChoose 2 answers",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "Create an e-mail template and use it in Process Builder."
        },
        {
          "isRight": false,
          "describe": "Install an application from the AppExchange to generate documents."
        },
        {
          "isRight": false,
          "describe": "Create a visual flow that implements the company's formatting."
        },
        {
          "isRight": true,
          "describe": "Create a Visualforce page with custom styling."
        }
      ]
    },
    {
      "describe": "A developer created a Visualforce page with a custom controller to show a list of accounts. The page uses the <apex:SelectList> component, with a variable called \"selection\", to show the valid values for Account.Type. The page uses an <apex : pageBlockTable> component to display the list of accounts, where the iteration variable is \"acct\".\nThe developer wants to ensure that when a user selects a type on the <apex:selectList> component, only accounts with that type are shown on the page.\nWhat should the developer do to accomplish this?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Add the Rendered=( !Acct.type=selection ) attribute to the pageBlockTable component."
        },
        {
          "isRight": false,
          "describe": "Create multiple lists in the controller that represent the relevant accounts for each account type when the page loads, then reference the correct one dynamically on the pageBlockTable."
        },
        {
          "isRight": false,
          "describe": "Create a component for each option and use a variable with hide parameter on the element."
        },
        {
          "isRight": true,
          "describe": "Use the onChange event to update the list of accounts in the controller when the value changes, and then re-render the pageBlockTable."
        }
      ]
    }
  ]
}