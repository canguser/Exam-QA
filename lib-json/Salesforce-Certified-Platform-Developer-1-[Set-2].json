{
  "title": "Salesforce-Certified-Platform-Developer-1-[Set-2]",
  "category": "Salesforce Dev 1",
  "questions": [
    {
      "describe": "What is printed from the following code?\nInteger a = 0;\nInteger b;\na = a++;\na++;\nInteger c = a * 5;\nString s = String.valueof(c) + a;\nSystem.debug(s + ';' + a + ';' + b);",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "6;1;0"
        },
        {
          "isRight": false,
          "describe": "51;1;0"
        },
        {
          "isRight": true,
          "describe": "51;1;null"
        },
        {
          "isRight": false,
          "describe": "6;1;null"
        }
      ]
    },
    {
      "describe": "How can a developer set up a debug log on a specific user?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Ask the user for access to their account credentials, log in as the user and debug the issue."
        },
        {
          "isRight": false,
          "describe": "Create Apex code that logs code actions into a custom object."
        },
        {
          "isRight": false,
          "describe": "It is not possible to setup debug logs for users other than yourself."
        },
        {
          "isRight": true,
          "describe": "Set up a trace flag for the user, and define a logging level and time period for the trace."
        }
      ]
    },
    {
      "describe": "A developer created a Lightning Component named accountList.cmp that displays a list of Accounts. Client side logic that is executed when a user hovers over an Account in the list should be stored in which bundle member?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "accountList.helper"
        },
        {
          "isRight": true,
          "describe": "accountListHelper.js"
        },
        {
          "isRight": false,
          "describe": "accountListRenderer.js"
        },
        {
          "isRight": false,
          "describe": "accountList.renderer"
        }
      ]
    },
    {
      "describe": "A developer is tasked with creating a schema to track Movies, Actors, and Contracts. A single Movie can have many Contracts and a single Actor can have many Contracts. Each Contract is owned and actively managed by a single user.\nWhich schema should be created to enable users to easily manage the Contracts they own; without requiring access to the movie or the actor records?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "A Lookup Relationship to the Movie object and a Lookup Relationship to the Actor object"
        },
        {
          "isRight": false,
          "describe": "A Master-Detail Relationship to the Movie object and Master-Detail Relationship to the Actor object"
        },
        {
          "isRight": false,
          "describe": "A Lookup Relationship to the Movie object and a Master-Detail Relationship to the Actor object"
        },
        {
          "isRight": false,
          "describe": "A Master-Detail Relationship to the Movie object and a Lookup Relationship to the Actor object"
        }
      ]
    },
    {
      "describe": "What are three ways for a developer to execute tests in an org? Choose 3 answers",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Metadata API"
        },
        {
          "isRight": true,
          "describe": "Developer Console"
        },
        {
          "isRight": true,
          "describe": "Setup Menu"
        },
        {
          "isRight": true,
          "describe": "Tooling API"
        },
        {
          "isRight": false,
          "describe": "Bulk API"
        }
      ]
    },
    {
      "describe": "What can a developer use to determine if the core Apex code exceeds any governor limits in a test class during bulk execution?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "@TestSetup"
        },
        {
          "isRight": true,
          "describe": "Limits, startTest, stopTest"
        },
        {
          "isRight": false,
          "describe": "Test.getDMLStatements()"
        },
        {
          "isRight": false,
          "describe": "@TestVisible"
        }
      ]
    },
    {
      "describe": "What are two uses for External IDs?\nChoose 2 answers",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "To prevent an import from creating duplicate records using Upsert"
        },
        {
          "isRight": true,
          "describe": "To create relationships between records imported from an external system"
        },
        {
          "isRight": false,
          "describe": "To identify the sObject type in Salesforce"
        },
        {
          "isRight": false,
          "describe": "To create a record in a development environment with the same Salesforce ID as in another environment"
        }
      ]
    },
    {
      "describe": "A developer created a helper class with a method that can be called from Visualforce pages, web services, triggers, and even anonymous code. When the method is called from a trigger, the developer needs to execute logic that should not be executed if the method is called from anywhere else.\nHow can the developer determine if the code is executed in a trigger context?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Check if Trigger.newMap != null."
        },
        {
          "isRight": true,
          "describe": "Check if Trigger.isExecuting == true."
        },
        {
          "isRight": false,
          "describe": "Check if System.executionContext == 'Trigger'."
        },
        {
          "isRight": false,
          "describe": "Use the executeOnTrigger annotation on the method definition."
        }
      ]
    },
    {
      "describe": "How can a custom type be identified as unique when added to a Set?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Methods in the class must be static."
        },
        {
          "isRight": false,
          "describe": "The class must have a method with the @InvocableMethod annotation."
        },
        {
          "isRight": false,
          "describe": "Methods in the class must be global."
        },
        {
          "isRight": true,
          "describe": "The class must implement the Equals and Hashcode methods."
        }
      ]
    },
    {
      "describe": "A Visualforce page is written with the following controller and extensions:\n<apex:page standardController=\"Account\" extensions=\"myExtension\"â€º\n<apex:inputField value=\"{!account.name}\"/> <p1/>\n<apex:commandButton value=\"Save\" action=\"{!save}\"/>\n</apex:page>\nThe extension class myExtension has a public save() method.\nWhich save method or methods will be used by the Visualforce page?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "both - the standardController first, then myExtension"
        },
        {
          "isRight": false,
          "describe": "the save method from the standardController"
        },
        {
          "isRight": false,
          "describe": "both - myExtension first, then the standardController"
        },
        {
          "isRight": true,
          "describe": "the save method from the controller extension"
        }
      ]
    },
    {
      "describe": "What should a developer use to post a message on chatter when a picklist field called Status _c on a custom object Application _c is set to \"Approved\"?",
      "answerOptions": [
        {
          "isRight": true,
          "describe": "Use Process Builder to post to Chatter based on meeting the required criteria."
        },
        {
          "isRight": false,
          "describe": "Use a Workflow Rule and use the \"Post to Chatter\" action when the record meets the criteria."
        },
        {
          "isRight": false,
          "describe": "Use the streaming API to post to Chatter."
        },
        {
          "isRight": false,
          "describe": "Use ConnectApi from Scheduled Apex."
        }
      ]
    },
    {
      "describe": "A developer needs to avoid potential system problems that can arise in a multi-tenant architecture.\nWhich requirement helps prevent poorly written applications from being deployed to a production environment?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "All Apex code must be annotated with the with sharing keyword."
        },
        {
          "isRight": false,
          "describe": "SOQL queries must reference sObjects with their appropriate namespace."
        },
        {
          "isRight": false,
          "describe": "Unit tests must cover at least 75% of the application's Apex code."
        },
        {
          "isRight": true,
          "describe": "All validation rules must be active before they can be deployed."
        }
      ]
    },
    {
      "describe": "What are two testing considerations when deploying code from a sandbox to production? Choose 2 answers",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Apex Code requires 100% coverage."
        },
        {
          "isRight": true,
          "describe": "Apex Code requires 75% coverage."
        },
        {
          "isRight": false,
          "describe": "75% of tests must execute without failure."
        },
        {
          "isRight": true,
          "describe": "100% of tests must execute without failure"
        }
      ]
    },
    {
      "describe": "A developer has created a Visualforce Page and Apex Controller that uses the With Sharing keyword. The page will be used by Sales Managers and should only display Accounts owned by Sales Representatives who report to the running Sales Manager. The organization-wide sharing for Accounts is set to Private.\nWhich additional set of steps should the developer take?",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Create one Profile, one Permission Set, and two Roles."
        },
        {
          "isRight": false,
          "describe": "Create two Profiles, one Permission Set, and one Role."
        },
        {
          "isRight": false,
          "describe": "Create one Profile, two Permission Sets, and one Role."
        },
        {
          "isRight": true,
          "describe": "Create one Profile, one Permission Set, and one Role."
        }
      ]
    },
    {
      "describe": "What are two features of Heroku Connect?\nChoose 2 answers",
      "answerOptions": [
        {
          "isRight": false,
          "describe": "Displaying data from an external data store via External Objects"
        },
        {
          "isRight": false,
          "describe": "Real Time Sync between Salesforce and Postgres"
        },
        {
          "isRight": true,
          "describe": "Bidirectional syncs, allowing data to be written into SFDC"
        },
        {
          "isRight": true,
          "describe": "Near Real Time Sync between Heroku Postgres and Salesforce"
        }
      ]
    }
  ]
}